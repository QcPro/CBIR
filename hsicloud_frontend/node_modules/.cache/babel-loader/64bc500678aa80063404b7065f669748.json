{"remainingRequest":"E:\\CBIR-Project\\CBIR-master\\hsicloud_frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\CBIR-Project\\CBIR-master\\hsicloud_frontend\\src\\store\\modules\\tagsView.js","dependencies":[{"path":"E:\\CBIR-Project\\CBIR-master\\hsicloud_frontend\\src\\store\\modules\\tagsView.js","mtime":1604049459000},{"path":"E:\\CBIR-Project\\CBIR-master\\hsicloud_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\CBIR-Project\\CBIR-master\\hsicloud_frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}